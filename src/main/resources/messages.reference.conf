{
  "broadcast prefix" : ${colours.aqua}"[UHC] ",
  "colours" : {
    ###########################################
    # Base colour codes, shouldn't be changed #
    ###########################################
    "black" : "§0",
    "dark blue" : "§1",
    "dark green" : "§2",
    "dark aqua" : "§3",
    "dark red" : "§4",
    "dark purple" : "§5",
    "gold" : "§6",
    "gray" : "§7",
    "dark gray" : "§8",
    "blue" : "§9",
    "green" : "§a",
    "aqua" : "§b",
    "red" : "§c",
    "light purple" : "§d",
    "yellow" : "§e",
    "white" : "§f",
    "magic" : "§k",
    "bold" : "§l",
    "strikethrough" : "§m",
    "underline" : "§n",
    "italic" : "§o",
    "reset" : "§r",
    ############################################
    # Custom colours for use in messages below #
    ############################################
    "negative" : ${colours.red},
    "command" : ${colours.aqua},
    "secondary" : ${colours.dark purple}
  },
  // alias for colours above, for americans
  "colors" : ${colours},
  "inventory" : {
    "lore-prefix" : ${colours.aqua}
  },
  #############################
  # Messages used in commands #
  #############################
  "commands" : {
    // used in a couple of commands below
    "not in team" : ${colours.negative}"You are not in a team",
    "players only" : ${colours.negative}"This command is intended for players only.",
    ##################
    # Commands below #
    ##################
    "border" : {
      "provide world" : ${colours.negative}"You must provide a world paramter when running not running as a player",
      "provide radius" : ${colours.negative}"Must provide a radius to create the border at",
      "provide time" : ${colours.negative}"You must provide a time parameter when using a shrinking border",
      // world = name of world whose border was reset
      "reset" : ${colours.command}"World border for `{{world}}` reset.",
      "invalid coords" : ${colours.negative}"Invalid coordinates supplied, 2 coordinates must be supplied in the format x:z",
      // world = name of world whose border was reset
      // radius = radius the border was set to
      // x = center x coordinate
      // z = center z coordinate
      "set regular" : ${colours.command}"World border in {{world}} set to radius {{radius}} centred at {{x}}:{{z}}"
      // radius = radius the border is shrinking to
      // seconds = how many seconds to reach this radius
      "set shrinking" : ${colours.command}"World border will shrink to {{radius}} in {{seconds}} seconds"
    },
    "uhc" : {
      "no modify permission" : ${colours.negative}"You do not have permission to modify modules. Run the command without any arguments to open the config viewer",
      // completed = how many modules were changed
      // total = how many modules where asked to change
      // states = list of new plugin states (pre-coloured)
      "processed" : ${colours.command}"Processed {{completed}}/{{total}} modules, new states: {{states}}",
      // modules = list of all module names
      "provide modules" : ${colours.negative}"You must provide at least 1 module name, available modules: "${colours.secondary}"[{{modules}}]",
      "players only" : ${commands.players only}
    },
    "h" : {
      "no players" : ${colours.negative}"No players online",
      // total = how many players
      // players = list of players and their health
      "message" : ${colours.command}"Player healths ({{total}}): "${colours.secondary}"{{players}}",
      // name = the name of the player
      // percentage = 0-100 percentage health
      // health = 0-20 health
      // maxHealth = player's max health
      "player" : "{{name}} {{percentage}}%",
      "player separator" : " "
    },
    "showhealth" : {
      // name = objective name
      // display = objective display name
      // slot = the chosen slot
      "assigned" : ${colours.command}"Registered health objective {{name}} ({{display}}) to the slot {{slot}}",
      // name = objective name
      "unregistered" : ${colours.command}"Unregistered old objective `{{name}}`"
    },
    "ghead" : {
      "provide number" : ${colours.negative}"You must provide an Integer to set the amount of health healed to",
      // amount = how much half hearts are healed
      "silent" : ${colours.command}"Golden heads now heal for {{amount}} HP",
      // amount = how much half hearts are healed
      "response" : ${broadcast prefix}${commands.ghead.silent}
    },
    "reset" : {
      "dont use star" : ${colours.negative}"Usage of * no longer works, use -a instead",
      "nothing to undo" : ${colours.negative}"There was nothing left to undo",
      // count = how many were reverted
      // total = how many were available
      "undone" : ${colours.command}"Undone for {{count}}/{{total}} original affected players.",
      "players only" : ${colours.negative}"You can only run this command without arguments as a player",
      // cache = how many seconds before undo stops working
      "notice" : ${colours.dark gray}"Run the command again with -u to undo (within ~{{cache}} seconds)",
      "for player" : ${colours.command}"Your character was reset",
      // count = how many affected
      // total = how many total
      "for sender" : ${colours.command}"Reset {{count}}/{{total}} players"
    },
    "heal" : ${commands.reset},
    "heal" : {
      "for player" : ${colours.command}"You were healed back up to full health",
      "for sender" : ${colours.command}"Healed {{count}}/{{total}} players"
    },
    "feed" : ${commands.reset},
    "feed" : {
      "for player" : ${colours.command}"You were fed back up to full hunger",
      "for sender" : ${colours.command}"Fed {{count}}/{{total}} players"
    },
    "ci" : ${commands.reset},
    "ci" : {
      "for player" : ${colours.command}"Your inventory was cleared",
      "for sender" : ${colours.command}"Cleared the inventory of {{count}}/{{total}} players"
    },
    "cleareffects" : ${commands.reset},
    "cleareffects" : {
      "for player" : ${colours.command}"You potion effects were cleared",
      "for sender" : ${colours.command}"Cleared the potion effects on {{count}}/{{total}} players"
    },
    "clearxp" : ${commands.reset},
    "clearxp" : {
      "for player" : ${colours.command}"Your XP was cleared",
      "for sender" : ${colours.command}"Cleared the XP of {{count}}/{{total}} players"
    },
    "wlist" : {
      // count = how many players were on the whitelist
      "remove" : ${colours.command}"Removed {{count}} players from the whitelist",
      // count = how many players online added
      // total = how many players are online
      "add" : ${colours.command}"Added {{count}} of {{total}} online players to the whitelist"
    },
    "pmt" : {
      "not in team" : ${commands.not in team},
      "players only" : ${commands.players only},
      // team prefix = the teams assigned prefix
      // team name = the id of the team
      // team display name = the display name or the regular if none set
      // sender = the name of the person who sent the message
      // message = the message sent
      "message format" : "{{team prefix}}[{{team display name}}]"${colurs.reset}${colours.light purple}" {{sender}}: "${colours.secondary}"{{message}}",
      "no message" : ${colours.negative}"You must provide a message to send"
    },
    "tc" : {
      "players only" : ${commands.players only},
      "not in team" : ${commands.not in team},
      // name = the player's name
      // display name = the player's display name
      // world = the world name
      // x,y,z = the individual coordinates
      "format" : ${commands.secondary}"[Team Coords] {{name}}: {{world}} {{x}}:{{y}}:{{z}}"
    },
    "tpp" : {
      "invalid flag" : ${colours.negative}"You must provide a player (-p) OR coordinates (-c with optional -w) to teleport to",
      "provide world" : ${colours.negative}"You must provide a world (-w) as you are not in a world",
      "no suitable Y" : ${colours.negative}"Couldn't find a suitable Y position for those coordinates, try other coordinates or specify a Y value"
      "invalid coordinates" : ${colours.negative}"Incorrect coords format use x,z OR x,y,z",
      // count = how many players were teleported
      "teleported" : ${colours.command}"Teleported {{count}} players"
    },
    "timer" : {
      "none running" : ${colours.negative}"There is no timer running currently",
      "cancelled" : ${colours.command}"Timer cancelled",
      "none previous" : ${colours.negative}"You must provide a message as there was no previous timer set",
      "started" : ${colours.command}"Timer started"
    }
  }
  #############################################
  # Messages use in modules (mainly GUI lore) #
  #############################################
  "modules" : {
    "autorespawn" : {
      "enabled lore" : ${inventory.lore-prefix}"Players will automatically respawn on death",
      "disabled lore" : ${inventory.lore-prefix}"Players choose when to respawn"
    },
    "deathbans" : {
      "enabled lore" : {
        // delay  = how long after death to apply the ban (pre-formatted time string)
        "header": ${inventory.lore-prefix}"Death bans are enabled, delay is {{delay}}",
        "actions" : {
          "header" : ${inventory.lore-prefix}"Actions:",
          // world = name of the world to respawn in
          "move world" : ${inventory.lore-prefix}"Sets respawn location to spawn of world `{{world}}`",
          // duration = how long the ban is for (pre-formatted time string)
          "ban" : ${inventory.lore-prefix}"Adds ban entry for {{duration}}",
          // serverName = the bungee server name to send to
          "server" : ${inventory.lore-prefix}"Moves to the server `{{serverName}}`",
          "kick" : ${inventory.lore-prefix}"Kicks player from the server"
        }
      },
      "disabled lore" : ${inventory.lore-prefix}"Death bans are not enabled"
    },
    "deathitems" : {
      "enabled lore" : {
        "header" : ${inventory.lore-prefix}"Players drop these extra items on death:",
        // amount = how many of the item to drop
        // type = the Material name
        // data = if data is 0 an empty string otherwise a string like :1 or :8
        "stack" : ${inventory.lore-prefix}"{{amount}}x {{type}}{{data}}"
      },
      "disabled lore" : ${inventory.lore-prefix}"No extra items are dropped on death"
    },
    "deathlightning" : {
      "enabled lore" : ${inventory.lore-prefix}"Fake lightning strikes at death location when a player dies",
      "disabled lore" : ${inventory.lore-prefix}"Death lightning is disabled"
    },
    "deathstands" : {
      "enabled lore" : ${inventory.lore-prefix}"Armour is placed on an armour stand on death",
      "disabled lore" : ${inventory.lore-prefix}"Items are dropped normally"
    },
    "deathmessages" : {
      "enabled lore" : {
        "description" : ${inventory.lore-prefix}"Death messages are modified.",
        // formatDescription = the description from the config.yml
        "format" : ${inventory.lore-prefix}"Format: {{{formatDescription}}}"
      },
      "disabled lore" : ${inventory.lore-prefix}"Death messages are not modified"
    },
    "harddifficulty" : {
      "enabled lore" : ${inventory.lore-prefix}"All worlds are HARD difficulty",
      "disabled lore" : ${inventory.lore-prefix}"World difficulties are not handled by the plugin"
    },
    "enderpearldamage" : {
      "enabled lore" : ${inventory.lore-prefix}"Enderpearls do damage",
      "disabled lore" : ${inventory.lore-prefix}"Enderpearls do no damage"
    },
    "extendedsaturation" : {
      // multiplier = how much saturation is multiplied by
      "enabled lore" : ${inventory.lore-prefix}"Food gives {{multiplier}} times the saturation",
      "disabled lore" : ${inventory.lore-prefix}"Food gives regular levels of saturation"
    },
    "goldenheads" : {
      // amount = how many full hearts a head heals
      "enabled lore" : ${inventory.lore-prefix}"Heal: {{amount}} hearts",
      "disabled lore" : ${inventory.lore-prefix}"Golden heads are not craftable and heal the regular 2 hearts"
    },
    "headdrops" : {
      // rate = the percent rate that heads drop
      "enabled lore" : ${inventory.lore-prefix}"Drop rate: {{rate}}%",
      "disabled lore" : ${inventory.lore-prefix}"Heads do not drop"
    },
    "chathealth" : {
      // type = 'percentage numbers' or 'bars'
      "enabled lore" : ${inventory.lore-prefix}"Health is shown before chat messages as {{type}}",
      "disabled lore" : ${inventory.lore-prefix}"Chat messages are not modified"
    },
    "ghasttears" : {
      // item = 'ghast tears' or 'gold ingots'
      "lore" : ${inventory.lore-prefix}"Ghasts drop {{item}}"
    },
    "hardcorehearts" : {
      "lore" : ${inventory.lore-prefix}"Showing hardcore hearts on login"
    },
    "healthregen" : {
      "enabled lore" : ${inventory.lore-prefix}"Natural health regeneration is enabled",
      "disabled lore" : ${inventory.lore-prefix}"Natural health regeneration is disabled"
    },
    "percenthealth" : {
      "enabled lore" : {
        "header" : ${inventory.lore-prefix}"Percent health objectives are being updated:",
        // objective = the name of the objective that is being updated
        "item" : ${inventory.lore-prefix}"   {{objective}}"
      },
      "disabled lore" : ${inventory.lore-prefix}"Health percent objectives are not being updated"
    },
    "horsearmour" : {
      "enabled lore" : ${inventory.lore-prefix}"Player ridden horses can wear armour",
      "disabled lore" : ${inventory.lore-prefix}"Player ridden horse have their armour removed",
      "dropped armour" : ${colours.negative}"Dropped horse's armour on the ground as it is disabled",
      "disabled message" : ${colours.negative}"Horse armour is disabled"
    },
    "horses" : {
      "enabled lore" : ${inventory.lore-prefix}"Riding horses is allowed",
      "disabled lore" : ${inventory.lore-prefix}"Riding horses is disabled",
      "disabled message" : ${colours.negative}"You were removed from your horse because horses are disabled"
    },
    "nether" : {
      "enabled lore" : ${inventory.lore-prefix}"Travelling to the nether is enabled",
      "disabled lore" : ${inventory.lore-prefix}"Travelling to the nether is disabled",
      // players = list of player names (comma separated)
      // worlds = list of world names (comma separated)
      "notification" : "§8The player/s [{{players}}] are within the nether world/s: [{{worlds}}].",
      "disabled message" : ${colours.negative}"The nether is disabled"
    },
    "absorption" : {
      "enabled lore" : ${inventory.lore-prefix}"Absorption is enabled",
      "disabled lore" : ${inventory.lore-prefix}"Absorption is disabled"
    },
    "splashpotions" : {
      "enabled lore" : ${inventory.lore-prefix}"Splash potions are brewable",
      "disabled lore" : ${inventory.lore-prefix}"Disabled splash potion brewing",
      "disabled message" : ${colours.negative}"Splash potions are unbrewable."
    },
    "tier2potions" : {
      "enabled lore" : ${inventory.lore-prefix}"Tier 2 potions are brewable",
      "disabled lore" : ${inventory.lore-prefix}"Disabled tier 2 potion brewing",
      "disabled message" : ${colours.negative}"Tier 2 potions are unbrewable."
    },
    "witchspawns" : {
      "enabled lore" : ${inventory.lore-prefix}"Witches can spawn",
      "disabled lore" : ${inventory.lore-prefix}"Witches cannot spawn"
    },
    "pvp" : {
      "enabled lore" : ${inventory.lore-prefix}"PVP is enabled in all worlds",
      "disabled lore" : ${inventory.lore-prefix}"PVP is disabled in all worlds"
    },
    "glisteringmelonrecipe" : {
      "enabled lore" : ${inventory.lore-prefix}"Requires a golden block to craft",
      "disabled lore" : ${inventory.lore-prefix}"Requires 8 golden nuggets to craft"
    },
    "goldencarrotrecipe" : {
      "enabled lore" : ${inventory.lore-prefix}"Requires golden ingots to craft",
      "disabled lore" : ${inventory.lore-prefix}"Requires golden nuggets to craft"
    },
    "notchapples" : {
      "enabled lore" : ${inventory.lore-prefix}"Notch apples are craftable",
      "disabled lore" : ${inventory.lore-prefix}"Notch apples are uncraftable"
    },
    "teammanager" : {
      // count = how many teams were created
      "lore" : ${inventory.lore-prefix}"Managing {{count}} teams. Not disableable"
    },
    "timer" : {
      "lore" : ${inventory.lore-prefix}"Handles running timers in the action bar. Not disableable"
    },
    "nerfquartzxp" : {
      // lower = min amount of XP
      // higher = max amount of XP
      "lore" : ${inventory.lore-prefix}"Quartz drops {{lower}}-{{higher}} XP"
    }
  }
}